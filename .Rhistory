load("F:/GitHub/AHP2/data/BD1.rda")
devtools::load_all()
devtools::document()
BD4
?BD4
devtools::install_git("Lyncoln/AHP2")
version
devtools::install_git("Lyncoln/AHP2")
?mtcars
BD1[1]
BD1
devtools::load_all()
BD1
BD1[1]
BD1[2]
BD1[3]
BD1[4]
BD1[5]
BD1[6]
BD1[7]
BD1
devtools::load_all()
devtools::document()
?BD1
devtools::document()
?BD1
devtools::document()
?BD1
?mtcars
devtools::document()
?BD1
devtools::document()
devtools::document()
devtools::document()
?BD1
devtools::document()
?BD1
devtools::document()
?BD1
devtools::document()
?BD1
options(encoding = 'UTF-8')
devtools::document()
devtools::document()
devtools::document()
?BD1
devtools::document()
BD2
BD1
ahp_geral(BD1)
ahp_geral(BD2)
BD2
x = BD2[c(5,1:4)]
x
ahp_geral(x)
BD3
devtools::document()
?BD1
BD3
BD2
BD3
ahp_geral(BD3, mapeamento = c(3,3,3))
devtools::document()
?BD1
devtools::document()
?BD1
devtools::load_all()
devtools::document()
BD2
load("D:/Download/BD2.rda")
BD2
BD2 = BD2[c(length(BD2),1:4)]
BD2
names(BD2)
names(BD2) = c("Lugar para viajar", "Custo", "Paisagem", "Prestigio", "Lazer")
BD2
BD1
BD2
usethis::use_data(BD2)
BD2
devtools::load_all()
devtools::document()
BD2
devtools::document()
devtools::document()
?BD1
devtools::document()
?BD1
?BD2
?BD1
devtools::document()
BD3
?BD@
?BD2
?BD1
?BD2
BD3
devtools::load_all()
BD3
ahp_geral(BD3,c(3,3,3))
CR(BD1)
CR(BD1[1])
CR(list(BD1[1]))
lapply(BD1, function(x) CR(x))
BD1
BD1[1]
CR(BD1[1])
lapply(BD1, function(x) print(x))
CR(BD1[1])
lapply(BD1, function(x) CR(x))
lapply(BD1, function(x) print(class(x)))
BD1[x]
BD1[1]
BD1[1][1]
CR(BD1[1][1])
CR(data.frame(BD1[1]))
CR(BD1[[1]])
ahp_geral(BD1)
BD3
BD3
devtools::document()
?BD3
devtools::document()
?BD3
BD3
len(BD3)
length(BD3)
devtools::document()
?BD3
?BD3
BD4
devtools::document()
devtools::load_all()
BD4
BD3
ahp_geral(BD1)
ahp_geral(BD1, mapeamento = "PADRÃO", nomes_alternativas = "PADRÃO")
?ahp_geral
ahp_geral(BD1, mapeamento = "PADRAO", nomes_alternativas = "PADRAO")
devtools::load_all()
devtools::document()
library(AHP)
BD1[1]
eigen(BD1[1])
eigen(BD1[1][[1]])
eigen(BD1[1][[1]]$vectors)
eigen(BD1[1][[1]])$vectors
eigen(BD1[1][[1]])$vectors[1]
eigen(BD1[1][[1]])$vectors[[1]]
eigen(BD1[1][[1]])$vectors
eigen(BD1[1][[1]])$vectors[,1]
re(eigen(BD1[1][[1]])$vectors[,1])
eigen(BD1[1][[1]])$vectors[,1]
Re(eigen(BD1[1][[1]])$vectors[,1])
Re(eigen(BD1[1][[1]])$vectors[,1])
calcula_prioridades(BD1[[1]])
BD1[[1]]
class(BD1[[1]])
calcula_prioridades(as.matrix(BD1[[1]]))
calcula_prioridades(as.matrix(BD1[1]))
eigen(BD1[1][[1]])$vectors[,1]
eigen(BD1[1][[1]])$vectors
BD1[[1]]
eigen(BD1[[1]])
calcula_prioridades(BD1[1])
BD1[1]
eigen(calcula_prioridades(BD1[1]))
eigen(BD1[[1]])
eigen(BD1[[1]])
eigen(BD1[[1]])$vectors[1]
eigen(BD1[[1]])$vectors[[1]]
eigen(BD1[[1]])$vectors[,1]
Re(eigen(BD1[[1]])$vectors[,1])
Re(eigen(BD1[[1]])$vectors[,1])/sum(eigen(BD1[[1]])$vectors[,1])
Re(eigen(BD1[[1]])$vectors[,1])/Re(sum(eigen(BD1[[1]])$vectors[,1]))
calcula_prioridades(BD1[1])
Re(eigen(BD1[[1]])$vectors[,1])/Re(sum(eigen(BD1[[1]])$vectors[,1]))
sum(Re(eigen(BD1[[1]])$vectors[,1])/Re(sum(eigen(BD1[[1]])$vectors[,1])))
x = c(1,2,3,6,7,8,11)
quantile(x,1)
quantile(x,0.25)
quantile(x,0.5)
quantile(x,0.75)
x = c(1,2,3,6,7,8,11,22)
0.25 * 21
quantile(x,0.25)
8*0.25
x = c(1,2,3,6,7,8,11)
7*0.25
8*0.25
x = c(1,2,5,6,13)
0.25 * 5
quantile(x, 0.25)
0.75*5
quantile(x, 0.75)
8*0.25
x = c(2,4,5,7,8,9,12,15)
quantile(x,0.25)
x = c(1,2,3,6,7,8,11)
quantile(x, 0.5)
7*0.5
x = c(1,2,3,6,7,8,11)
y = c(2,4,5,7,8,9,12)
quantile(y,0.5)
8*0.5
y = c(2,4,5,7,8,9,12,15)
quantile(y,0.5)
7*0.25
7*0.5
x
y
quantile(y,0.25)
y
4+5
9/2
y
length(y)
8*0.25
quantile(y,0.25)
0.5*4 + 0.5*5
?quantile
quantile
y
8*0.25
8*0.5
8*0.75
z = c(5,6,6,9,10,13,15)
x
z
quantile(z,0.5)
quantile(z,0.25)
quantile(z,0.75)
quantile(z,0.75)
5+6.5
quantile(c(5,6,6,9,10,13,15),0.75)
y
quantile(y,0.25)
0.5*7+0.5*5
0.5*4
0.5*5
x
z
quantile(z,0.75)
z = c(13,17,25,28,33,41,65,69,72)
quantile(z,0.5)
0.5*17+0.5*25
quantile(z,0.25)
?quantile
